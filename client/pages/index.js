import Head from 'next/head';
import { Card } from '../components/Card';
import { Header } from '../components/Header';
import { Footer } from '../components/Footer';
import { Bar } from '../components/Bar';
import { useEffect } from 'react';
import { useState } from 'react';

if (process.env.NODE_ENV !== 'development') {
  // disable all console logs
  console.log = function () {};
}

export default function Home({ data }) {
  const [selected, setSelected] = useState();
  const [ranking, setRanking] = useState(data);

  const getGMCutoff = () => {
    const master = data.filter((player) => player.tier !== 'GRANDMASTER');
    return parseInt(master[0].lp) + parseInt(master[0].lp_to_uprank);
  };

  const sortRanking = () => {
    if (selected == 'lp') {
      setRanking((ranking) => ranking.sort((a, b) => b.progress - a.progress));
    } else if (selected == 'progress') {
      // check if tier is diamond and put them at the end
      setRanking((ranking) =>
        ranking.sort((a, b) => {
          if (a.tier == 'DIAMOND' && b.tier != 'DIAMOND') {
            return 1;
          } else if (b.tier == 'DIAMOND' && a.tier != 'DIAMOND') {
            return -1;
          } else {
            return b.progress - a.progress;
          }
        })
      );
    } else {
      setRanking((ranking) => ranking.sort((a, b) => a.position - b.position));
    }
  };

  useEffect(() => {
    sortRanking();
    console.log('selected', selected);
  }, [selected]);

  return (
    <>
      <Head>
        <title>VININE Grandmaster Challenge</title>
        <meta name='description' content='Generated by create next app' />
      </Head>
      <Header />
      <Bar selected={selected} setSelected={setSelected} GMLP={getGMCutoff()} />
      <div
        className='grid grid-col grid-cols-1 
       lg:grid-cols-2 justify-items-center xl:grid-cols-3'
      >
        {ranking.map((player, index) => (
          <Card playerData={player} key={player.name} index={index} />
        ))}
      </div>
      <Footer />
    </>
  );
}

export async function getServerSideProps() {
  const url =
    process.env.NODE_ENV === 'development'
      ? 'http://localhost:8080/players'
      : 'https://vinine-grandmaster.herokuapp.com/players';

  const res = await fetch(url);
  const data = await res.json();

  return { props: { data } };
}
